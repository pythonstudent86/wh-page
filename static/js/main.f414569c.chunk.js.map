{"version":3,"sources":["utils/fetchData.js","utils/tegramm-bot-msg.js","components/navbar/NavMenu.style.js","components/navbar/NavMenu.js","components/warehouseHeader/WarehouseHeader.style.js","components/warehouseHeader/WarehouseHeader.js","utils/locationArr.js","components/positionCard/PositionCard.style.js","components/positionCard/PositionCard.js","utils/filterArr.js","components/allPositions/AllPosition.style.js","components/allPositions/AllPosition.js","components/loading/Loading.style.js","components/loading/Loading.js","App.js","index.js"],"names":["fetchData","a","axios","fetchDataResp","fetchUpdateData","id","key","value","key1","value1","content","patch","then","resp","console","log","status","requestTelegram","positionName","newLocation","messageText","NavContainer","styled","nav","NavSection","div","NavBtn","button","NavText","span","ButtonAppBar","data","onClickHeandlerBack","onAllPositionHandler","className","length","type","onClick","HeadersList","ul","HeaderListItem","li","props","setDisable","HeaderText","p","WarehouseHeader","onClickHeandler","setReloadState","setLoading","useState","whName","setWhName","useEffect","dataArr","tempArr","newArr","forEach","element","includes","location","push","elem","setColor","position","cargo","undefined","wh","set","locationArr","map","warehouse","index","name","colorSwitch","color1","color2","color3","color4","uhtishka","CardList","CardListItem","CardTextSection","changeQ","CardButton","PositionCard","locationFilter","oClickUpdate","noChangeQuantity","onAlertHeandle","filteredArr","setFilteredArr","showPosition","setShowPositions","targetLocation","filteredData","item","filterArr","changedQTo","quantity","uhtQuant","AllPositionList","AllPositionListItem","TextPosition","AllPosition","onUtishkaSetQuantity","LoadingMessage","h1","LoadingContainer","Loading","App","state","setState","showWh","setShowWh","showPositions","showAllPositions","setShowAllPositions","setLocationFilter","reloadState","loading","target","firstChild","textContent","e","parentElement","style","backgroundColor","nextElementSibling","inputData","parseInt","prompt","isNaN","previousSibling","quantityPosition","previousElementSibling","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f414569c.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst fetchData = async () => {\n  const fetchDataResp = await axios(\n    \"https://wh-data-serv.herokuapp.com/positions\"\n  );\n  return fetchDataResp;\n};\n\nconst fetchUpdateData = async (id, key, value, key1 = null, value1 = null) => {\n  let content = {};\n  if (key1 !== null) {\n    content = {\n      [key1]: value1,\n      [key]: value,\n    };\n  } else {\n    content = { [key]: value };\n  }\n  return await axios\n    .patch(`https://wh-data-serv.herokuapp.com/positions/${id}`, content)\n    .then((resp) => console.log(\"request status: \", resp.status));\n};\n\nexport { fetchData, fetchUpdateData };\n","import axios from 'axios';\r\n\r\nconst API_TOKEN = '1898954081:AAEu4Dl6bGruT1CHzOdTalx_lAaHb9fJ_60';\r\nconst CHAT_ID = '391676';\r\n\r\nfunction requestTelegram(positionName, newLocation) {\r\n  const messageText = `⚠️ измени пожалуйста склад хранения для ${positionName} на ${newLocation}`\r\n  axios(\r\n    `https://api.telegram.org/bot${API_TOKEN}/sendMessage?chat_id=${CHAT_ID}&text=${messageText}&parse_mode=HTML`,\r\n  );\r\n}\r\n\r\nexport default requestTelegram;\r\n","import styled from \"@emotion/styled\";\n\nexport const NavContainer = styled.nav`\n  display: flex;\n  align-items: center;\n  background-color: #faa93e;\n  width: 100%;\n  height: 60px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  margin-bottom: 20px;\n`;\n\nexport const NavSection = styled.div`\n  &.counter {\n    margin-left: 20px;\n  }\n  &.buttons {\n    margin-left: auto;\n    margin-right: 20px;\n  }\n`;\n\nexport const NavBtn = styled.button`\n  border-radius: 5px;\n  padding: 5px 10px;\n  border: 0;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  background-color: #0099ff;\n  color: #ffffff;\n\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n`;\n\nexport const NavText = styled.span`\n  color: #ffffff;\n  text-shadow: 2px 2px 4px green;\n`;\n","import {\n  NavContainer,\n  NavSection,\n  NavBtn,\n  NavText,\n} from \"components/navbar/NavMenu.style\";\n\nexport default function ButtonAppBar({\n  data,\n  onClickHeandlerBack,\n  onAllPositionHandler,\n}) {\n  return (\n    <NavContainer>\n      <NavSection className=\"counter\">\n        <NavText>{data && data.length} позиций</NavText>\n      </NavSection>\n      <NavSection className=\"buttons\">\n        <NavBtn type=\"button\" onClick={onClickHeandlerBack}>\n          Склады\n        </NavBtn>\n        <NavBtn type=\"button\" onClick={onAllPositionHandler}>\n          Все позиции\n        </NavBtn>\n      </NavSection>\n    </NavContainer>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const HeadersList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const HeaderListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  width: 100%;\n  height: 60px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  background-color: ${(props) => (props.setDisable ? \"#afafaf\" : \"#faa93e\")};\n  border-radius: 5px 5px 30px 5px;\n  margin-bottom: 20px;\n`;\n\nexport const HeaderText = styled.p`\n  font-weight: 800;\n  color: #ffffff;\n  font-size: 20px;\n`;\n","import { useState, useEffect } from \"react\";\nimport {\n  HeadersList,\n  HeaderListItem,\n  HeaderText,\n} from \"components/warehouseHeader/WarehouseHeader.style\";\nimport locationArr from \"utils/locationArr\";\n\nexport default function WarehouseHeader({\n  data,\n  onClickHeandler,\n  setReloadState,\n  setLoading,\n}) {\n  const [whName, setWhName] = useState([]);\n\n  useEffect(() => {\n    if (data) {\n      setWhName(locationArr(data));\n    }\n  }, [data]);\n\n  useEffect(() => {\n    setReloadState(true);\n    setLoading(true);\n  }, [setLoading, setReloadState]);\n\n  return (\n    <HeadersList className=\"heders\">\n      {whName.map((warehouse, index) => (\n        <HeaderListItem\n          key={index}\n          onClick={onClickHeandler}\n          setDisable={warehouse.set}\n        >\n          <HeaderText name=\"locationName\">{warehouse.wh}</HeaderText>\n        </HeaderListItem>\n      ))}\n    </HeadersList>\n  );\n}\n","export default function locationArr(dataArr) {\n  let tempArr = [];\n  let newArr = [];\n  dataArr.forEach((element) => {\n    if (!tempArr.includes(element.location)) {\n      tempArr.push(element.location);\n    }\n  });\n  tempArr.forEach((elem) => {\n    let setColor;\n    dataArr.forEach((position) => {\n      if (elem === position.location) {\n        if (position.cargo === false) {\n          setColor = false;\n        }\n      }\n    });\n    if (setColor === undefined) {\n      setColor = true;\n    }\n    newArr.push({ wh: elem, set: setColor });\n  });\n  return newArr;\n}\n","import styled from \"@emotion/styled\";\n\nconst colorSwitch = (props, color1, color2, color3, color4) => {\n  if (props.cargo && !props.uhtishka) {\n    return color1;\n  }\n  if (props.cargo && props.uhtishka) {\n    return color2;\n  }\n  if (!props.cargo && !props.uhtishka) {\n    return color3;\n  }\n  if (!props.cargo && props.uhtishka) {\n    return color4;\n  }\n};\n\nexport const CardList = styled.ul`\n  padding: 0;\n  list-style: none;\n  width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const CardListItem = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  width: 100%;\n  min-height: 60px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  background-color: ${(props) => (props.cargo ? \"#afafaf\" : \"#0099FF\")};\n  border-radius: 5px 5px 30px 5px;\n  color: #ffffff;\n  margin-bottom: 20px;\n`;\n\nexport const CardTextSection = styled.p`\n  margin-left: 20px;\n  &.text {\n    width: 450px;\n  }\n  &.uht-btn {\n    text-align: center;\n    background-color: ${(props) =>\n      colorSwitch(props, \"transparent\", \"#94d374\", \"transparent\", \"#94d374\")};\n    color: ${(props) =>\n      colorSwitch(props, \"transparent\", \"#ffffff\", \"transparent\", \"#ffffff\")};\n  }\n  &.block {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 50px;\n    height: 50px;\n    border-radius: 5px 5px 15px 5px;\n  }\n  &.quantity {\n    background-color: ${(props) => (props.changeQ ? \"#ff1900\" : \"#faa93e\")};\n  }\n`;\n\nexport const CardButton = styled.button`\n  border-radius: 5px 5px 15px 5px;\n  padding: 5px 10px;\n  border: 0;\n  color: #ffffff;\n  width: 50px;\n  height: 50px;\n  border: 1px solid #afafaf;\n  background-color: ${(props) => (props.cargo ? \"#afafaf\" : \"#0099FF\")};\n  margin-right: auto;\n  margin-left: auto;\n`;\n","import { useState, useEffect } from \"react\";\nimport {\n  CardList,\n  CardListItem,\n  CardTextSection,\n  CardButton,\n} from \"components/positionCard/PositionCard.style\";\nimport filterArr from \"utils/filterArr\";\n\nexport default function PositionCard({\n  data,\n  locationFilter,\n  onClickHeandlerBack,\n  oClickUpdate,\n  noChangeQuantity,\n  onAlertHeandle,\n}) {\n  const [filteredArr, setFilteredArr] = useState([]);\n  const [showPosition, setShowPositions] = useState(false);\n\n  const showQuantity = (changeQ, changedQTo, quantity) => {\n    if (changeQ) {\n      return changedQTo;\n    } else {\n      return quantity;\n    }\n  };\n\n  useEffect(() => {\n    setFilteredArr(filterArr(locationFilter, data));\n  }, [data, locationFilter]);\n\n  useEffect(() => {\n    if (filteredArr) {\n      setShowPositions(true);\n    }\n  }, [filteredArr]);\n\n  return (\n    <div>\n      <CardList>\n        {showPosition &&\n          filteredArr.map((position) => (\n            <CardListItem key={position.id} cargo={position.cargo}>\n              <CardTextSection\n                id={position.id}\n                onClick={oClickUpdate}\n                className=\"text\"\n              >\n                {position.name}\n              </CardTextSection>\n              <CardTextSection\n                id={position.id}\n                changeQ={position.changeQ}\n                className=\"block quantity\"\n                onClick={noChangeQuantity}\n              >\n                {showQuantity(\n                  position.changeQ,\n                  position.changedQTo,\n                  position.quantity\n                )}\n              </CardTextSection>\n              <CardTextSection\n                className=\"block uht-btn\"\n                uhtishka={position.uhtishka}\n                cargo={position.cargo}\n              >\n                У<br />\n                {position.uhtQuant}\n              </CardTextSection>\n              <CardButton\n                id={position.id}\n                type=\"button\"\n                cargo={position.cargo}\n                onClick={onAlertHeandle}\n              >\n                !\n              </CardButton>\n            </CardListItem>\n          ))}\n      </CardList>\n      <CardList>\n        <CardListItem onClick={onClickHeandlerBack}>\n          <CardTextSection>‹‹‹ к списку складов</CardTextSection>\n        </CardListItem>\n      </CardList>\n    </div>\n  );\n}\n","export default function filterArr(targetLocation, dataArr) {\n  let filteredData = [];\n  dataArr.forEach((item) => {\n    if (item.location === targetLocation) {\n      filteredData.push(item);\n    }\n  });\n  return filteredData;\n}\n","import styled from \"@emotion/styled\";\n\nexport const AllPositionList = styled.ul`\n  padding: 0;\n  list-style: none;\n  width: 460px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const AllPositionListItem = styled.li`\n  display: flex;\n  align-items: center;\n  padding: 0;\n  width: 100%;\n  min-height: 60px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  background-color: ${(props) => (props.uhtishka ? \"#94d374\" : \"#0099FF\")};\n  border-radius: 5px 5px 30px 5px;\n  color: #ffffff;\n  margin-bottom: 20px;\n`;\n\nexport const TextPosition = styled.p`\n  display: block;\n  margin-left: 15px;\n  &.name {\n    width: 270px;\n  }\n  &.quantity {\n    width: 30px;\n  }\n`;\n","import {\n  AllPositionList,\n  AllPositionListItem,\n  TextPosition,\n} from \"components/allPositions/AllPosition.style\";\n\nexport default function AllPosition({ data, onUtishkaSetQuantity }) {\n  return (\n    <div>\n      <AllPositionList>\n        {data.map((position) => (\n          <AllPositionListItem key={position.id} uhtishka={position.uhtishka}>\n            <TextPosition className=\"name\">{position.name}</TextPosition>\n            <TextPosition className=\"quantity\">\n              {position.quantity}\n            </TextPosition>\n            <TextPosition id={position.id} onClick={onUtishkaSetQuantity}>\n              Ухтышке: {position.uhtQuant}\n            </TextPosition>\n          </AllPositionListItem>\n        ))}\n      </AllPositionList>\n    </div>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const LoadingMessage = styled.h1`\n  width: 640px;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n`;\n\nexport const LoadingContainer = styled.div``;\n","import {\n  LoadingMessage,\n  LoadingContainer,\n} from \"components/loading/Loading.style\";\n\nexport default function Loading() {\n  return (\n    <LoadingContainer>\n      <LoadingMessage>Loading data...</LoadingMessage>\n    </LoadingContainer>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nimport { fetchData, fetchUpdateData } from \"utils/fetchData\";\nimport requestTelegram from \"utils/tegramm-bot-msg\";\n\nimport ButtonAppBar from \"components/navbar/NavMenu\";\nimport WarehouseHeader from \"components/warehouseHeader/WarehouseHeader\";\nimport PositionCard from \"components/positionCard/PositionCard\";\nimport AllPosition from \"components/allPositions/AllPosition\";\nimport Loading from \"components/loading/Loading\";\n\nfunction App() {\n  const [state, setState] = useState();\n  const [showWh, setShowWh] = useState(false);\n  const [showPositions, setShowPositions] = useState(false);\n  const [showAllPositions, setShowAllPositions] = useState(false);\n  const [locationFilter, setLocationFilter] = useState(\"\");\n  const [reloadState, setReloadState] = useState(true);\n  const [loading, setLoading] = useState(true);\n\n  const onClickHeandler = ({ target }) => {\n    setLocationFilter(target.firstChild.textContent);\n    setShowWh(false);\n    setShowPositions(true);\n  };\n\n  const onClickHeandlerBack = () => {\n    setShowPositions(false);\n    setShowAllPositions(false);\n    setShowWh(true);\n  };\n\n  const oClickUpdate = (e) => {\n    if (e.target.parentElement.style.backgroundColor !== \"rgb(175, 175, 175)\") {\n      fetchUpdateData(e.target.id, \"cargo\", true);\n      e.target.parentElement.style.backgroundColor = \"#afafaf\";\n      e.target.nextElementSibling.nextElementSibling.nextElementSibling.style.backgroundColor =\n        \"#afafaf\";\n    }\n  };\n\n  const onAllPositionHandler = () => {\n    setShowPositions(false);\n    setShowWh(false);\n    setShowAllPositions(true);\n  };\n\n  const noChangeQuantity = (e) => {\n    const inputData = parseInt(prompt());\n    if (!isNaN(inputData)) {\n      fetchUpdateData(e.target.id, \"changeQ\", true, \"changedQTo\", inputData);\n      e.target.textContent = inputData;\n      e.target.style.backgroundColor = \"#ea3c3c\";\n    }\n  };\n\n  const onUtishkaSetQuantity = (e) => {\n    const quantityPosition = parseInt(\n      e.target.previousElementSibling.textContent\n    );\n    const inputData = parseInt(prompt());\n    if (!isNaN(inputData) && quantityPosition >= inputData) {\n      if (inputData !== 0) {\n        fetchUpdateData(e.target.id, \"uhtishka\", true, \"uhtQuant\", inputData);\n        e.target.textContent = `Ухтышке: ${inputData}`;\n        e.target.parentElement.style.backgroundColor = \"#94d374\";\n      } else {\n        fetchUpdateData(e.target.id, \"uhtishka\", false, \"uhtQuant\", inputData);\n        e.target.textContent = `Ухтышке: ${inputData}`;\n        e.target.parentElement.style.backgroundColor = \"#0099FF\";\n      }\n    }\n  };\n\n  const onAlertHeandle = (e) => {\n    const positionName =\n      e.target.previousSibling.previousSibling.previousSibling.textContent;\n    const inputData = prompt();\n    if (!inputData) {\n      return;\n    }\n    requestTelegram(positionName, inputData);\n  };\n\n  useEffect(() => {\n    if (reloadState) {\n      fetchData().then((resp) => setState(resp.data));\n      setReloadState(false);\n      setLoading(false);\n      setShowWh(true);\n    }\n  }, [reloadState]);\n\n  return (\n    <div className=\"App\">\n      <ButtonAppBar\n        data={state}\n        onClickHeandlerBack={onClickHeandlerBack}\n        onAllPositionHandler={onAllPositionHandler}\n      />\n      {loading && <Loading />}\n      {showWh && (\n        <WarehouseHeader\n          data={state}\n          onClickHeandler={onClickHeandler}\n          setReloadState={setReloadState}\n          setLoading={setLoading}\n        />\n      )}\n      {showPositions && (\n        <PositionCard\n          data={state}\n          locationFilter={locationFilter}\n          onClickHeandlerBack={onClickHeandlerBack}\n          oClickUpdate={oClickUpdate}\n          noChangeQuantity={noChangeQuantity}\n          onAlertHeandle={onAlertHeandle}\n        />\n      )}\n      {showAllPositions && (\n        <AllPosition data={state} onUtishkaSetQuantity={onUtishkaSetQuantity} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}