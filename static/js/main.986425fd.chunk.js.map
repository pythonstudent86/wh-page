{"version":3,"sources":["utils/fetchData.js","components/navbar/NavMenu.style.js","components/navbar/NavMenu.js","components/warehouseHeader/WarehouseHeader.style.js","components/warehouseHeader/WarehouseHeader.js","utils/locationArr.js","components/positionCard/PositionCard.style.js","components/positionCard/PositionCard.js","utils/filterArr.js","components/allPositions/AllPosition.style.js","components/allPositions/AllPosition.js","components/loading/Loading.style.js","components/loading/Loading.js","App.js","index.js"],"names":["fetchData","a","axios","fetchDataResp","fetchUpdateData","id","key","value","key1","value1","content","console","log","patch","then","resp","NavContainer","styled","nav","NavSection","div","NavBtn","button","NavText","span","ButtonAppBar","data","onClickHeandlerBack","onAllPositionHandler","className","length","type","onClick","HeadersList","ul","HeaderListItem","li","HeaderText","p","WarehouseHeader","onClickHeandler","setReloadState","setLoading","useState","whName","setWhName","useEffect","dataArr","tempArr","forEach","element","includes","location","push","locationArr","map","warehouse","index","name","colorSwitch","props","color1","color2","color3","color4","cargo","uhtishka","CardList","CardListItem","CardTextSection","changeQ","CardButton","PositionCard","locationFilter","oClickUpdate","noChangeQuantity","filteredArr","setFilteredArr","showPosition","setShowPositions","targetLocation","filteredData","item","filterArr","position","changedQTo","quantity","uhtQuant","AllPositionList","AllPositionListItem","TextPosition","AllPosition","onUtishkaSetQuantity","LoadingMessage","h1","LoadingContainer","Loading","App","state","setState","showWh","setShowWh","showPositions","showAllPositions","setShowAllPositions","setLocationFilter","reloadState","loading","target","firstChild","textContent","e","parentElement","style","backgroundColor","nextElementSibling","inputData","parseInt","prompt","isNaN","quantityPosition","previousElementSibling","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.986425fd.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst fetchData = async () => {\n  const fetchDataResp = await axios(\n    \"https://wh-data-serv.herokuapp.com/positions\"\n  );\n  return fetchDataResp;\n};\n\nconst fetchUpdateData = async (id, key, value, key1 = null, value1 = null) => {\n  let content = {}\n  if (key1 !== null) {\n    console.log(\"not null\")\n    content = {\n      [key1]: value1,\n      [key]: value,\n    };\n  } else {\n    content = { [key]: value };\n  }\n  return await axios\n    .patch(`https://wh-data-serv.herokuapp.com/positions/${id}`, content)\n    .then((resp) => console.log(resp));\n};\n\nexport { fetchData, fetchUpdateData };\n","import styled from \"@emotion/styled\";\n\nexport const NavContainer = styled.nav`\n  display: flex;\n  align-items: center;\n  background-color: #faa93e;\n  width: 100%;\n  height: 60px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  margin-bottom: 20px;\n`;\n\nexport const NavSection = styled.div`\n  &.counter {\n    margin-left: 20px;\n  }\n  &.buttons {\n    margin-left: auto;\n    margin-right: 20px;\n  }\n`;\n\nexport const NavBtn = styled.button`\n  border-radius: 5px;\n  padding: 5px 10px;\n  border: 0;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  background-color: #0099ff;\n  color: #ffffff;\n\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n`;\n\nexport const NavText = styled.span`\n  color: #ffffff;\n  text-shadow: 2px 2px 4px green;\n`;\n","import {\n  NavContainer,\n  NavSection,\n  NavBtn,\n  NavText,\n} from \"components/navbar/NavMenu.style\";\n\nexport default function ButtonAppBar({\n  data,\n  onClickHeandlerBack,\n  onAllPositionHandler\n}) {\n  return (\n    <NavContainer>\n      <NavSection className=\"counter\">\n        <NavText>{data && data.length} позиций</NavText>\n      </NavSection>\n      <NavSection className=\"buttons\">\n        <NavBtn type=\"button\" onClick={onClickHeandlerBack}>Склады</NavBtn>\n        <NavBtn type=\"button\" onClick={onAllPositionHandler}>Все позиции</NavBtn>\n      </NavSection>\n    </NavContainer>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const HeadersList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  width: 460px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const HeaderListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  width: 100%;\n  height: 60px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  background-color: #faa93e;\n  border-radius: 5px 5px 30px 5px;\n  margin-bottom: 20px;\n`;\n\nexport const HeaderText = styled.p`\n  font-weight: 800;\n  color: #ffffff;\n  font-size: 20px;\n`;\n","import { useState, useEffect } from \"react\";\nimport {\n  HeadersList,\n  HeaderListItem,\n  HeaderText,\n} from \"components/warehouseHeader/WarehouseHeader.style\";\nimport locationArr from \"utils/locationArr\";\n\nexport default function WarehouseHeader({ data, onClickHeandler, setReloadState, setLoading }) {\n  const [whName, setWhName] = useState([]);\n\n  useEffect(() => {\n    if (data) {\n      setWhName(locationArr(data));\n    }\n  }, [data]);\n\n  useEffect(() => {\n    setReloadState(true);\n    setLoading(true);\n  }, [setLoading, setReloadState])\n\n  return (\n    <HeadersList className=\"heders\">\n      {whName.map((warehouse, index) => (\n        <HeaderListItem key={index} onClick={onClickHeandler}>\n          <HeaderText name=\"locationName\">{warehouse}</HeaderText>\n        </HeaderListItem>\n      ))}\n    </HeadersList>\n  );\n}\n","export default function locationArr(dataArr) {\n  let tempArr = [];\n  dataArr.forEach((element) => {\n    if (!tempArr.includes(element.location)) {\n      tempArr.push(element.location);\n    }\n  });\n  return tempArr;\n}\n","import styled from \"@emotion/styled\";\n\nconst colorSwitch = (props, color1, color2, color3, color4) => {\n  if (props.cargo === \"true\" && props.uhtishka === \"false\") {\n    return color1\n  };\n  if (props.cargo === \"true\" && props.uhtishka === \"true\") {\n    return color2\n  };\n  if (props.cargo === \"false\" && props.uhtishka === \"false\") {\n    return color3\n  };\n  if (props.cargo === \"false\" && props.uhtishka === \"true\") {\n    return color4\n  };\n};\n\nexport const CardList = styled.ul`\n  padding: 0;\n  list-style: none;\n  width: 460px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const CardListItem = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  width: 100%;\n  min-height: 60px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  background-color: ${props =>\n    props.cargo === \"false\" ? \"#0099FF\" : \"#afafaf\"};\n  border-radius: 5px 5px 30px 5px;\n  color: #ffffff;\n  margin-bottom: 20px;\n`;\n\nexport const CardTextSection = styled.p`\n  margin-left: 10px;\n  &.text {\n    width: 250px;\n  }\n  &.uht-btn {\n    text-align: center;\n    background-color: ${props => colorSwitch(props, \"transparent\", \"#94d374\", \"transparent\", \"#94d374\")};\n    color: ${props => colorSwitch(props, \"transparent\", \"#ffffff\", \"transparent\", \"#ffffff\")};\n  }\n  &.block {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 50px;\n    height: 50px;\n    border-radius: 5px 5px 15px 5px;\n  }\n  &.quantity {\n    background-color: ${(props) => (props.changeQ === \"false\" ? \"#faa93e\" : \"#ff1900\")};\n  }\n`;\n\nexport const CardButton = styled.button`\n  border-radius: 5px 5px 15px 5px;\n  padding: 5px 10px;\n  border: 0;\n  color: #ffffff;\n  width: 50px;\n  height: 50px;\n  background-color: ${props =>\n    props.cargo === \"false\" ? \"#0099FF\" : \"#afafaf\"};  margin-right: auto;\n  margin-left: auto;\n`;\n","import { useState, useEffect } from \"react\";\nimport {\n    CardList,\n    CardListItem,\n    CardTextSection,\n    CardButton,\n} from \"components/positionCard/PositionCard.style\";\nimport filterArr from \"utils/filterArr\";\n\nexport default function PositionCard({\n    data,\n    locationFilter,\n    onClickHeandlerBack,\n    oClickUpdate,\n    noChangeQuantity\n}) {\n    const [filteredArr, setFilteredArr] = useState([]);\n    const [showPosition, setShowPositions] = useState(false);\n\n    const showQuantity = (changeQ, changedQTo, quantity) => {\n        if (changeQ === \"false\") {\n            console.log(false)\n            return quantity\n        }\n        if (changeQ === \"true\") {\n            console.log(true)\n            return changedQTo\n        }\n    };\n\n\n    useEffect(() => {\n        setFilteredArr(filterArr(locationFilter, data));\n    }, [data, locationFilter]);\n\n    useEffect(() => {\n        if (filteredArr) {\n            setShowPositions(true);\n        }\n    }, [filteredArr]);\n\n\n    return (\n        <div>\n            <CardList>\n                {showPosition &&\n                    filteredArr.map(position => (\n                        <CardListItem\n                            key={position.id}\n                            cargo={position.cargo}>\n                            <CardTextSection\n                                id={position.id}\n                                onClick={oClickUpdate}\n                                className=\"text\"\n                            >\n                                {position.name}\n                            </CardTextSection>\n                            <CardTextSection\n                                id={position.id}\n                                changeQ={position.changeQ}\n                                className=\"block quantity\"\n                                onClick={noChangeQuantity}\n                            >\n                                {showQuantity(position.changeQ, position.changedQTo, position.quantity)}\n                            </CardTextSection>\n                            <CardTextSection\n                                className=\"block uht-btn\"\n                                uhtishka={position.uhtishka}\n                                cargo={position.cargo}\n                            >\n                                У<br />\n                                {position.uhtQuant}\n                            </CardTextSection>\n                            <CardButton\n                                className=\"alert\"\n                                cargo={position.cargo}>!</CardButton>\n                        </CardListItem>\n                    ))}\n            </CardList>\n            <CardList>\n                <CardListItem onClick={onClickHeandlerBack}>\n                    <CardTextSection>‹‹‹ к списку складов</CardTextSection>\n                </CardListItem>\n            </CardList>\n        </div>\n    );\n}\n","export default function filterArr(targetLocation, dataArr) {\n  let filteredData = [];\n  dataArr.forEach((item) => {\n    if (item.location === targetLocation) {\n      filteredData.push(item);\n    }\n  });\n  return filteredData;\n}\n","import styled from \"@emotion/styled\";\n\nexport const AllPositionList = styled.ul`\n  padding: 0;\n  list-style: none;\n  width: 460px;\n  margin-left: auto;\n  margin-right: auto;`;\n\nexport const AllPositionListItem = styled.li`\n  display: flex;\n  align-items: center;\n  padding: 0;\n  width: 100%;\n  min-height: 60px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  background-color: ${props => props.uhtishka === \"false\" ? \"#0099FF\" : \"#94d374\"};\n  border-radius: 5px 5px 30px 5px;\n  color: #ffffff;\n  margin-bottom: 20px;\n`;\n\nexport const TextPosition = styled.p`\n    display: block;\n    margin-left: 15px;\n    &.name{\n      width: 270px;\n    }\n    &.quantity{\n      width: 30px;\n    }\n`;\n\n","import { AllPositionList, AllPositionListItem, TextPosition } from 'components/allPositions/AllPosition.style'\n\n\nexport default function AllPosition({ data, onUtishkaSetQuantity }) {\n\n\n\n    return (\n        <div>\n            <AllPositionList>\n                {data.map(position => (\n                    <AllPositionListItem\n                        key={position.id}\n                        uhtishka={position.uhtishka}\n                    >\n                        <TextPosition\n                            className=\"name\">{position.name}</TextPosition>\n                        <TextPosition\n                            className=\"quantity\"\n                        >{position.quantity}</TextPosition>\n                        <TextPosition\n                            id={position.id}\n                            onClick={onUtishkaSetQuantity}>Ухтышке: {position.uhtQuant}</TextPosition>\n                    </AllPositionListItem>\n                ))}\n            </AllPositionList>\n        </div>\n    )\n}\n","import styled from \"@emotion/styled\";\n\nexport const LoadingMessage = styled.h1`\n    width: 640px;\n    margin-left: auto;\n    margin-right: auto;\n    text-align: center;`;\n\nexport const LoadingContainer = styled.div`\n`;","import { LoadingMessage, LoadingContainer } from 'components/loading/Loading.style'\n\nexport default function Loading() {\n    return (\n        <LoadingContainer>\n            <LoadingMessage>Loading data...</LoadingMessage>\n        </LoadingContainer>\n    )\n}\n","import { useState, useEffect } from \"react\";\n\nimport { fetchData, fetchUpdateData } from \"utils/fetchData\";\n\nimport ButtonAppBar from \"components/navbar/NavMenu\";\nimport WarehouseHeader from \"components/warehouseHeader/WarehouseHeader\";\nimport PositionCard from \"components/positionCard/PositionCard\";\nimport AllPosition from \"components/allPositions/AllPosition\";\nimport Loading from \"components/loading/Loading\";\n\nfunction App() {\n  const [state, setState] = useState();\n  const [showWh, setShowWh] = useState(false);\n  const [showPositions, setShowPositions] = useState(false);\n  const [showAllPositions, setShowAllPositions] = useState(false);\n  const [locationFilter, setLocationFilter] = useState(\"\");\n  const [reloadState, setReloadState] = useState(true);\n  const [loading, setLoading] = useState(true)\n\n  const onClickHeandler = ({ target }) => {\n    setLocationFilter(target.firstChild.textContent);\n    setShowWh(false);\n    setShowPositions(true);\n  };\n\n  const onClickHeandlerBack = () => {\n    setShowPositions(false);\n    setShowAllPositions(false);\n    setShowWh(true);\n  };\n\n  const oClickUpdate = (e) => {\n    if (e.target.parentElement.style.backgroundColor !== \"rgb(175, 175, 175)\") {\n      fetchUpdateData(e.target.id, \"cargo\", \"true\");\n      e.target.parentElement.style.backgroundColor = \"#afafaf\";\n      e.target.nextElementSibling.nextElementSibling.nextElementSibling.style.backgroundColor = \"#afafaf\"\n    }\n  };\n\n  const onAllPositionHandler = () => {\n    setShowPositions(false);\n    setShowWh(false);\n    setShowAllPositions(true);\n  }\n\n  const noChangeQuantity = (e) => {\n    const inputData = parseInt(prompt());\n    console.log(e.target.id)\n    console.log(inputData)\n    if (!isNaN(inputData)) {\n      fetchUpdateData(e.target.id, \"changeQ\", \"true\", \"changedQTo\", inputData)\n      e.target.textContent = inputData;\n      e.target.style.backgroundColor = \"#ea3c3c\"\n    }\n  }\n\n  const onUtishkaSetQuantity = (e) => {\n    const quantityPosition = parseInt(e.target.previousElementSibling.textContent);\n    const inputData = parseInt(prompt());\n    if (!isNaN(inputData) && quantityPosition >= inputData) {\n      if (inputData !== 0) {\n        fetchUpdateData(e.target.id, \"uhtishka\", \"true\", \"uhtQuant\", inputData)\n        e.target.textContent = `Ухтышке: ${inputData}`\n        e.target.parentElement.style.backgroundColor = \"#94d374\"\n      } else {\n        fetchUpdateData(e.target.id, \"uhtishka\", \"false\", \"uhtQuant\", inputData)\n        e.target.textContent = `Ухтышке: ${inputData}`\n        e.target.parentElement.style.backgroundColor = \"#0099FF\"\n      }\n\n    }\n  }\n\n  useEffect(() => {\n    if (reloadState) {\n      fetchData().then((resp) => setState(resp.data));\n      setReloadState(false);\n      setLoading(false);\n      setShowWh(true);\n    }\n  }, [reloadState]);\n\n  return (\n    <div className=\"App\">\n      <ButtonAppBar\n        data={state}\n        onClickHeandlerBack={onClickHeandlerBack}\n        onAllPositionHandler={onAllPositionHandler}\n      />\n      {loading && <Loading />}\n      {showWh && (\n        <WarehouseHeader\n          data={state}\n          onClickHeandler={onClickHeandler}\n          setReloadState={setReloadState}\n          setLoading={setLoading}\n        />\n\n      )}\n      {showPositions && (\n        <PositionCard\n          data={state}\n          locationFilter={locationFilter}\n          onClickHeandlerBack={onClickHeandlerBack}\n          oClickUpdate={oClickUpdate}\n          noChangeQuantity={noChangeQuantity}\n        />)}\n      {\n        showAllPositions && (\n          <AllPosition\n            data={state}\n            onUtishkaSetQuantity={onUtishkaSetQuantity}\n          />\n        )\n      }\n    </div >\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode >,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}